
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "gameObject.sol";

contract baseStation is gameObject {

    constructor() public {
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
    }

    mapping (address => units) warUnit;

    struct units {
        uint baseHP;
        uint warHP;
        uint archHP;
        address warrior;
        address archer;
    }

    // address[] warUnit;

    function newWarUnit(address baseAddr) public returns (address) {
        tvm.accept();
        warUnit[baseAddr];
        return baseAddr;
    }

    // function actualInfo(address baseAddr, address warAddr, address archAddr)

    function newWarrior(address baseAddr, address unitAddr) public {
        tvm.accept();
        warUnit[baseAddr].warrior = unitAddr;
    }

    function newArcher(address baseAddr, address unitAddr) public {
        tvm.accept();
        warUnit[baseAddr].archer = unitAddr;
    }

    function delWarUnit(address baseAddr, uint hp) internal {
        tvm.accept();
        dead(hp);
        delete warUnit[baseAddr];
    }
}