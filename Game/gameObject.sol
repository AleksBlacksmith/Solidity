
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

import "interfaceGameObject.sol";

contract gameObject is interfaceGameObject {

    constructor() public {
        require(tvm.pubkey() != 0, 101);
        require(msg.pubkey() == tvm.pubkey(), 102);
        tvm.accept();
    }

    uint public hitPoint = 5;
    uint public shield = 1;
    uint public at;
    uint public unitHP = 5;


    function getShield() virtual public returns(uint) {
        tvm.accept();
        return shield;
    }

    function getPower() virtual public returns(uint) {
        tvm.accept();
        return at;
    }

    function checkLive(uint hp) private returns(bool) {
        tvm.accept();
        if (hp <= 0) {
            return (false);
        }
        else {
            return (true);
        }
    }

    function dead(uint hp) internal {
        tvm.accept();
        bool live = checkLive(hp);
        if (live == false) {
            msg.sender.transfer(1, true, 160);
        }
    }

    function getAttack(uint power) virtual external override {
        // address addrEnemy = msg.sender;
        unitHP = unitHP + getShield() - power;
    }
}
